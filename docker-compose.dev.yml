# download docker for windows 10 : http://mirrors.aliyun.com/docker-toolbox/windows/docker-for-windows/stable/
# downlaod docker for mac: http://mirrors.aliyun.com/docker-toolbox/mac/docker-for-mac/?spm=5176.8351553.0.0.bbe41991kmM8fG
#
version: "3"

services:

  php-fpm:
    image: ${PROJECT}/php:7.4-fpm-alpine3.12-with-sockets
    #build:
    #  context: .
    #  dockerfile: ./.docker/php-fpm/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_php_fpm
    #ports:
    #  - 9005:9000
    volumes:
      #- /etc/localtime:/etc/localtime:ro
      - ./src-magento/app:/data/www/app
      - magento-data-media:/data/www/pub/media
      - magento-data-static:/data/www/pub/static
    stdin_open: true
    tty: true   #这两条是防止启动php失败

  crond:
    image: ${PROJECT}/php:7.4-cli-alpine3.12-with-sockets
    #build:
    #  context: .
    #  dockerfile: ./.docker/crond/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_php_crond
    depends_on:
      - php-fpm
    volumes:
      #- /etc/localtime:/etc/localtime:ro
      - ./src-magento/app:/data/www/app
      - magento-data-media:/data/www/pub/media
      - magento-data-static:/data/www/pub/static


  nginx:
    image: ${PROJECT}/nginx:1.17.6-alpine
    #build:
    #  context: .
    #  dockerfile: ./.docker/nginx/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    ports:
      - 80:80
    depends_on:
      - php-fpm
    volumes:
      - magento-data-media:/data/www/pub/media
      - magento-data-static:/data/www/pub/static
      - ./.docker/nginx:/data/nginx:cached
      - ./.docker/nginx/etc/nginx.conf:/etc/nginx/nginx.conf:ro

  redis:
    image: ${CONTAINER_REGISTRY}/redis:6.0.6-alpine3.12
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    restart: always
    stdin_open: true
    tty: true
    expose:
      - "6379"
    #volumes:
    command: redis-server --appendonly yes --requirepass redis


  mysql:
    image: ${CONTAINER_REGISTRY}/mysql:5.7.31
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    restart: always
    #ports:
    #  - 3309:3306
    volumes:
      - ./.docker/mysql/log:/var/log/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf:ro
      - ./transfer/db:/docker-entrypoint-initdb.d:delegated
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
     # - MYSQL_DATABASE=${MYSQL_DATABASE}
     # - MYSQL_USER=${MYSQL_USER}
     # - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  #  command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci


  phpmyadmin:
    image: ${CONTAINER_REGISTRY}/phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}_phpmyadmin
    restart: always
    ports:
      - "8888:80"
    depends_on:
      - mysql
    environment:
      - PMA_HOST=mysql
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASSWORD}


  adminer:
    image: ${CONTAINER_REGISTRY}/adminer:latest
    container_name: ${COMPOSE_PROJECT_NAME}_adminer
    restart: always
    ports:
      - 8899:8080
    depends_on:
      - mysql
    environment:
      - ADMINER_DEFAULT_SERVER=mysql


  elasticsearch:
    image: ${CONTAINER_REGISTRY}/elasticsearch:7.6.0-with-ik
    #image: robinfu/elasticsearch:7.6.2-with-ik
    container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch
    #restart: always
    environment:
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    #ulimits:
    #  memlock:
    #    soft: -1
    #    hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      #- elasticsearch-data:/usr/share/elasticsearch/data
      - ./.docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./.docker/elasticsearch/logs:/usr/share/elasticsearch/logs

  #elasticsearch2:
  #  image: registry.cn-hangzhou.aliyuncs.com/ulooo/elasticsearch:6.8.5
  #  environment:
  #    - cluster.name=docker-cluster
  #    - bootstrap.memory_lock=false
  #    - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
  #    - "discovery.zen.ping.unicast.hosts=elasticsearch"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  volumes:
  #  - ./.docker/elasticsearch2/data:/usr/share/elasticsearch/data


  elasticsearch-head:
    image: ${CONTAINER_REGISTRY}/elasticsearch:head-v5
    container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch_head
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - ./.docker/elasticsearch-head/config/Gruntfile.js:/usr/src/app/Gruntfile.js:ro


volumes:
  mysql-data:
  magento-data-media:
  magento-data-static:

